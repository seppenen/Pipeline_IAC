# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
    branches:
      include:
        - feature
    paths:
      exclude: 
        - 'azure-pipeline-feature.yml'
        
pool:
  vmImage: ubuntu-latest

stages:
  - stage: build
    displayName: Test and Build

    jobs:
      #Temporary disabled due to massive errors in the code. Lint has been tested OK.
      #- job: lint_tests
      #  displayName: Lint Tests
      #  steps:
      #   - script: |
      #       docker pull github/super-linter:latest
      #       docker run -e RUN_LOCAL=true -v $(System.DefaultWorkingDirectory):/tmp/lint github/super-linter
      #          displayName: 'Code Scan using GitHub Super-Linter'

      - job: build
        displayName: Test and Build
        steps:
          - task: Maven@3
            displayName: Build
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              jdkArchitectureOption: 'x64'
              goals: 'package '

          - task: CopyFiles@2
            inputs:
              Contents: '**'
              TargetFolder: '$(build.artifactstagingdirectory)'

          - task: PublishTestResults@2
            displayName: JUnit
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/TEST-*.xml'
              failTaskOnFailedTests: true
              testRunTitle: 'JUnit'

          - task: PublishCucumberReport@1
            displayName: 'Publish Cucumber Report'
            inputs:
              jsonDir: ./target
              outputPath: ./target
              theme: 'bootstrap'
              reportSuiteAsScenarios: true







